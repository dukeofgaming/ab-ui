name: Monorepo Pipeline

on:
  push:
    branches:
      - develop
      - main
      
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write
  
jobs:
  test:
    name: Run Tests
    uses: ./.github/workflows/test.yml


  release:
    name: Changeset Release
    runs-on: ubuntu-latest
    # needs: 
    #   - test
    outputs:
      changesets-is-release-merge: ${{ steps.changesets_is_release_merge.outputs.changesets-is-release-merge }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changeset-release ancestor
        id: changesets_is_release_merge
        uses: ./.github/actions/changesets-is-release-merge
        with:
          commit: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Determine release parameters
        id: params
        shell: bash
        run: |
          # Determine release type based on branch and merge status
          case "${{ github.ref_name }}" in
            "develop")
                # This is a changeset release merge - do pre-release
                echo "ðŸš§ **Pre-release detected** on develop branch" | tee -a $GITHUB_STEP_SUMMARY
                echo "- Will create pre-release with tag 'dev'" | tee -a $GITHUB_STEP_SUMMARY
                echo "- This is a changeset release merge commit" | tee -a $GITHUB_STEP_SUMMARY
                echo "" | tee -a $GITHUB_STEP_SUMMARY
                
                echo "release_type=pre" | tee -a $GITHUB_OUTPUT
                echo "tag=dev" | tee -a $GITHUB_OUTPUT
              ;;
            "main")
                # This is a changeset release merge - do stable release
                echo "ðŸš€ **Stable release detected** on main branch" | tee -a $GITHUB_STEP_SUMMARY
                echo "- Will create stable release" | tee -a $GITHUB_STEP_SUMMARY
                echo "- This is a changeset release merge commit" | tee -a $GITHUB_STEP_SUMMARY
                echo "" | tee -a $GITHUB_STEP_SUMMARY

                echo "release_type=stable" | tee -a $GITHUB_OUTPUT
                echo "tag=" | tee -a $GITHUB_OUTPUT
              ;;
            *)
              # Other branches - always snapshot
              echo "ðŸ“¸ **Snapshot release** for push to ${{ github.ref_name }}" | tee -a $GITHUB_STEP_SUMMARY
              echo "- Will create snapshot with tag '${{ github.ref_name }}'" | tee -a $GITHUB_STEP_SUMMARY
              echo "- This allows testing changes after merge" | tee -a $GITHUB_STEP_SUMMARY
              echo "" | tee -a $GITHUB_STEP_SUMMARY

              echo "release_type=skip" | tee -a $GITHUB_OUTPUT
              echo "snapshot=true" | tee -a $GITHUB_OUTPUT
              echo "tag=${{ github.ref_name }}" | tee -a $GITHUB_OUTPUT
              ;;
          esac

      - name: Execute Changeset Release
        uses: ./.github/actions/changeset-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          snapshot: ${{ steps.changesets_is_release_merge.outputs.changesets-is-release-merge == 'false' && 'true' || 'false' }}
          release_type: ${{ steps.params.outputs.release_type }}
          tag: ${{ steps.params.outputs.tag }}
          branch: ${{ github.ref_name }}

  storybook:
    name: Publish Storybook
    runs-on: ubuntu-latest
    needs: 
      - release
    if: needs.release.outputs.changesets-is-release-merge == 'true' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Publish Storybook
        uses: ./.github/actions/storybook-publish
        env:
          CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
        with:
          target: ${{ github.ref == 'refs/heads/main' && 'chromatic' || 'github-pages' }}

  promote_dev_to_main:
    name: Promote dev to main
    runs-on: ubuntu-latest
    needs:
      - release
    if: needs.release.outputs.changesets-is-release-merge == 'true' && github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js 24
        uses: actions/setup-node@v4
        with:
          node-version: 24
      - name: Install Dependencies
        run: npm ci
      
      - name: Create PR from dev to main
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ACTION_RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          PR_JSON=$(gh pr \
            list \
            --base main \
            --head develop \
            --state open \
            --json number,url
          )

          if [ "$(echo "$PR_JSON" | jq 'length')" -eq 0 ]; then
            ACTION="Created"

            PR_URL=$(gh pr \
              create \
              --base main \
              --head develop \
              --title "Promote dev to main" \
              --body "Automated promotion PR from dev to main" \
              --fill \
              | tail -n1)

            PR_NUMBER=$(basename "$PR_URL")
            
          else
            ACTION="Updated"

            PR_URL=$(echo "$PR_JSON" | jq -r '.[0].url')
            PR_NUMBER=$(echo "$PR_JSON" | jq -r '.[0].number')

            gh pr \
              comment \
                $PR_NUMBER \
                --body "- ðŸš€ Updated PR from dev to main from action run ${ACTION_RUN_URL}"
          fi

          echo "- ðŸš€ $ACTION PR from dev to main: $PR_URL" >> $GITHUB_STEP_SUMMARY
